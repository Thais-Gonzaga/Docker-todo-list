{
  "requirements": [
    {
      "bonus": false,
      "description": "1 - Crie um container em modo interativo, sem rodá-lo, nomeando-o como `01container` e utilizando a imagem `alpine` na versão `3.12`",
      "enabled": true,
      "identifier": null,
      "order": 1,
      "skill_ids": []
    },
    {
      "bonus": false,
      "description": "2 - Inicie o container `01container`",
      "enabled": true,
      "identifier": null,
      "order": 2,
      "skill_ids": []
    },
    {
      "bonus": false,
      "description": "3 - Liste os containers filtrando pelo nome `01container`",
      "enabled": true,
      "identifier": null,
      "order": 3,
      "skill_ids": []
    },
    {
      "bonus": false,
      "description": "4 - Execute o comando `cat /etc/os-release` no container `01container` sem se acoplar a ele",
      "enabled": true,
      "identifier": null,
      "order": 4,
      "skill_ids": []
    },
    {
      "bonus": false,
      "description": "5 - Remova o container `01container`",
      "enabled": true,
      "identifier": null,
      "order": 5,
      "skill_ids": []
    },
    {
      "bonus": false,
      "description": "6 - Faça o download da imagem `nginx` com a versão `1.21.3-alpine` sem criar ou rodar um container",
      "enabled": true,
      "identifier": null,
      "order": 6,
      "skill_ids": []
    },
    {
      "bonus": false,
      "description": "7 - Rode um novo container com a imagem  `nginx` com a versão `1.21.3-alpine` em segundo plano nomeando-o como `02images` e mapeando sua porta padrão de acesso para porta `3000` do sistema hospedeiro",
      "enabled": true,
      "identifier": null,
      "order": 7,
      "skill_ids": []
    },
    {
      "bonus": false,
      "description": "8 - Pare o container `02images` que está em andamento",
      "enabled": true,
      "identifier": null,
      "order": 8,
      "skill_ids": []
    },
    {
      "bonus": false,
      "description": "9 - Gere uma build a partir do Dockerfile do `back-end` do `todo-app` nomeando a imagem para `todobackend`",
      "enabled": true,
      "identifier": null,
      "order": 9,
      "skill_ids": []
    },
    {
      "bonus": false,
      "description": "10 - Gere uma build a partir do Dockerfile do `front-end` do `todo-app` nomeando a imagem para `todofrontend`",
      "enabled": true,
      "identifier": null,
      "order": 10,
      "skill_ids": []
    },
    {
      "bonus": false,
      "description": "11 - Gere uma build a partir do Dockerfile dos `testes` do `todo-app` nomeando a imagem para `todotests`",
      "enabled": true,
      "identifier": null,
      "order": 11,
      "skill_ids": []
    },
    {
      "bonus": true,
      "description": "12 - Suba uma orquestração em segundo plano com o docker-compose de forma que `backend`, `frontend` e `tests` consigam se comunicar",
      "enabled": true,
      "identifier": null,
      "order": 12,
      "skill_ids": []
    }
  ]
}